import schulze
import random


def test_6_candidates_45_votes():
    # Candidate 'x' is someone no-one voted for but was eligible.
    # Otherwise, this test reflects the example on https://en.wikipedia.org/wiki/Schulze_method
    candidates = ['a', 'b', 'c', 'd', 'e', 'x']
    votes = [
        [(1, 'a'), (2, 'c'), (3, 'b'), (4, 'e'), (5, 'd')],
        [(1, 'a'), (2, 'c'), (3, 'b'), (4, 'e'), (5, 'd')],
        [(1, 'a'), (2, 'c'), (3, 'b'), (4, 'e'), (5, 'd')],
        [(1, 'a'), (2, 'c'), (3, 'b'), (4, 'e'), (5, 'd')],
        [(1, 'a'), (2, 'c'), (3, 'b'), (4, 'e'), (5, 'd')], #5
        [(1, 'a'), (2, 'd'), (3, 'e'), (4, 'c'), (5, 'b')],
        [(1, 'a'), (2, 'd'), (3, 'e'), (4, 'c'), (5, 'b')],
        [(1, 'a'), (2, 'd'), (3, 'e'), (4, 'c'), (5, 'b')],
        [(1, 'a'), (2, 'd'), (3, 'e'), (4, 'c'), (5, 'b')],
        [(1, 'a'), (2, 'd'), (3, 'e'), (4, 'c'), (5, 'b')], #5
        [(1, 'b'), (2, 'e'), (3, 'd'), (4, 'a'), (5, 'c')],
        [(1, 'b'), (2, 'e'), (3, 'd'), (4, 'a'), (5, 'c')],
        [(1, 'b'), (2, 'e'), (3, 'd'), (4, 'a'), (5, 'c')],
        [(1, 'b'), (2, 'e'), (3, 'd'), (4, 'a'), (5, 'c')],
        [(1, 'b'), (2, 'e'), (3, 'd'), (4, 'a'), (5, 'c')],
        [(1, 'b'), (2, 'e'), (3, 'd'), (4, 'a'), (5, 'c')],
        [(1, 'b'), (2, 'e'), (3, 'd'), (4, 'a'), (5, 'c')],
        [(1, 'b'), (2, 'e'), (3, 'd'), (4, 'a'), (5, 'c')], #8
        [(1, 'c'), (2, 'a'), (3, 'b'), (4, 'e'), (5, 'd')],
        [(1, 'c'), (2, 'a'), (3, 'b'), (4, 'e'), (5, 'd')], #20
        [(1, 'c'), (2, 'a'), (3, 'b'), (4, 'e'), (5, 'd')], #3
        [(1, 'c'), (2, 'b'), (3, 'a'), (4, 'd'), (5, 'e')],
        [(1, 'c'), (2, 'b'), (3, 'a'), (4, 'd'), (5, 'e')], #2
        [(1, 'd'), (2, 'c'), (3, 'e'), (4, 'b'), (5, 'a')],
        [(1, 'd'), (2, 'c'), (3, 'e'), (4, 'b'), (5, 'a')],
        [(1, 'd'), (2, 'c'), (3, 'e'), (4, 'b'), (5, 'a')],
        [(1, 'd'), (2, 'c'), (3, 'e'), (4, 'b'), (5, 'a')],
        [(1, 'd'), (2, 'c'), (3, 'e'), (4, 'b'), (5, 'a')],
        [(1, 'd'), (2, 'c'), (3, 'e'), (4, 'b'), (5, 'a')],
        [(1, 'd'), (2, 'c'), (3, 'e'), (4, 'b'), (5, 'a')], #30
        [(1, 'c'), (2, 'a'), (3, 'e'), (4, 'b'), (5, 'd')],
        [(1, 'c'), (2, 'a'), (3, 'e'), (4, 'b'), (5, 'd')],
        [(1, 'c'), (2, 'a'), (3, 'e'), (4, 'b'), (5, 'd')],
        [(1, 'c'), (2, 'a'), (3, 'e'), (4, 'b'), (5, 'd')],
        [(1, 'c'), (2, 'a'), (3, 'e'), (4, 'b'), (5, 'd')],
        [(1, 'c'), (2, 'a'), (3, 'e'), (4, 'b'), (5, 'd')],
        [(1, 'c'), (2, 'a'), (3, 'e'), (4, 'b'), (5, 'd')], #7
        [(1, 'e'), (2, 'b'), (3, 'a'), (4, 'd'), (5, 'c')],
        [(1, 'e'), (2, 'b'), (3, 'a'), (4, 'd'), (5, 'c')],
        [(1, 'e'), (2, 'b'), (3, 'a'), (4, 'd'), (5, 'c')], #40
        [(1, 'e'), (2, 'b'), (3, 'a'), (4, 'd'), (5, 'c')],
        [(1, 'e'), (2, 'b'), (3, 'a'), (4, 'd'), (5, 'c')],
        [(1, 'e'), (2, 'b'), (3, 'a'), (4, 'd'), (5, 'c')],
        [(1, 'e'), (2, 'b'), (3, 'a'), (4, 'd'), (5, 'c')],
        [(1, 'e'), (2, 'b'), (3, 'a'), (4, 'd'), (5, 'c')] #8
    ]

    # Randomize the votes
    random.shuffle(votes)

    # Create directed graph
    preference = schulze.rank_votes(votes, candidates)

    # Extract rank numbers
    results = schulze.voting_results(preference, candidates)

    print ", ".join(results.keys())
    assert ", ".join(results.keys()) == "e, a, c, b, d, x"


###
# TODO TESTS
###

#candidates = ['x','y','z']
"""
votes = [
    [(1, 'x'),(2,'y'),(3,'z')],
    [(1, 'y'),(2,'z'),(3,'x')],
    [(1, 'z'),(2,'x'),(3,'y')]
]
"""

"""
    {'a':
        {'x': 45, 'c': 28, 'b': 28, 'e': 24, 'd': 30},
    'c':
        {'a': 25, 'x': 45, 'b': 29, 'e': 24, 'd': 29},
    'b':
        {'a': 25, 'x': 45, 'c': 28, 'e': 24, 'd': 33},
    'e':
        {'a': 25, 'x': 45, 'c': 28, 'b': 28, 'd': 31},
    'd':
        {'a': 25, 'x': 45, 'c': 28, 'b': 28, 'e': 24},
    'x':
        {'a': 0, 'c': 0, 'b': 0, 'e': 0, 'd': 0}}
"""

#print preference
"""{'a':
        {'c': 26, 'b': 20, 'e': 22, 'd': 30},
    'c':
        {'a': 19, 'b': 29, 'e': 24, 'd': 17},
    'b':
        {'a': 25, 'c': 16, 'e': 18, 'd': 33},
    'e':
        {'a': 23, 'c': 21, 'b': 27, 'd': 31},
    'd':
        {'a': 15, 'c': 28, 'b': 12, 'e': 14}}
"""
#voting_results([])

